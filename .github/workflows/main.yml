name: Test project

on: [push, pull_request]

jobs:
  testAllModes:
    name: Test in ${{ matrix.testMode }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - test-project
        testMode:
          - playmode
          - editmode
-steps:
    - uses: game-ci/unity-test-runner@v2
    env:
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
    with:
    projectPath: SUPERunners\superRUNNERS
    githubToken: ${{ secrets.GITHUB_TOKEN }}
    - uses: game-ci/unity-test-runner@v2
    with:
        githubToken: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/upload-artifact@v2
        if: always()
        with:
        name: Test results
        path: artifacts
    - uses: actions/upload-artifact@v2
    if: always()
    with:
        name: Coverage results
        path: ${{ steps.myTestStep.outputs.coveragePath }}
    - uses: actions/cache@v2
    with:
        path: path/to/your/project/Library
        key: Library-MyProjectName-TargetPlatform
        restore-keys: |
        Library-MyProjectName-
        Library-


name: Build project

on: [pull_request]

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

- name: Return license
  uses: game-ci/unity-return-license@v2
  if: always()
name: Test project

on: [push, pull_request]

jobs:
  testAllModes:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - test-project
        testMode:
          - playmode
          - editmode
    steps:
        - uses: game-ci/unity-test-runner@v2
          env:
              UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
              UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
              UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          with:
              projectPath: superRUNNERS
              githubToken: ${{ secrets.GITHUB_TOKEN }} 
        - uses: game-ci/unity-test-runner@v2
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          with:
            projectPath: superRUNNERS
            githubToken: ${{ secrets.GITHUB_TOKEN }}
        - uses: actions/upload-artifact@v2
          if: always()
          with:
            name: Test results
            path: .github\artifacts
        - uses: actions/upload-artifact@v2
          if: always()
          with:
              name: Coverage results
              path: ${{ steps.myTestStep.outputs.coveragePath }}
        - uses: actions/cache@v2
          with:
              path: .github\cache
              key: Library-MyProjectName-TargetPlatform
              restore-keys: |
                Library-MyProjectName-
                Library-
